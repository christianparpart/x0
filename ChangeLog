0.9.0 (YYYY-MM-DD)

	* flow: support builtin handler/function overloading.
	* flow: support array assignments to variables.
	* flow: improved internal constant value handling.
	* flow: improved array handling, also resulting into runtime performance boosts and better semantic verifications.
	* flow: implements direct threaded interpreter loop (enabled by default).
	* flow: dropped superfluous opcodes
	* flow: added optimization pass: dead code elimination
	* flow: added optimization pass: constant condition folding
	* flow: added optimization pass: superfluous branch-to-exit folding
	* flow: optimizations are now enabled by default
	* flow: added support for unary bit-wise NOT operator
	* flow: fixes to all boolean operators
	* flow: fixes use of large integer constants in expressions
	* flow: builtin callee user-verification uses (optimized) IR instead of AST now.
	* x0d: builtin workers() is now overloaded for workers(I)V and workers(i)V; no workers.affinity(i)V anymore.
	* x0d: memory resource leak fixes upon program exit.
	* x0d: adds sleep() shared function
	* plugins: new plugin "access" for basic IP & CIDR network based access control.

0.8.0 (2014-03-23)

	* base: Added Cidr API for general CIDR management.
	* flow: Added support for nested file parsing (via `#include "path"`), including filename globbing.
	* flow: Added new keyword `match` for optimized multi-branch pattern matching.
	* flow: Added CIDR notation for IPv4/IPv6 networks as native literal type.
	* flow: Dropped LLVM-dependency and run Flow on a dedicated VM.
	* flow: Properly implement power operator's disassociativety.
	* flow: Variables must not change type during lifetime.
	* flow: Every handler/function call statement and variable declaration must be followed by a semicolon ';'.
	* http: Fixed a bug that caused a crash when posting to a completion-callback into a connection to crash.
	* http: Fixed large requests that lead to a timeout or hang forever.
	* http: Improved client-side caching awareness for GET requests on static files.
	* http: Improved protocol error reporting.
	* director: Added experimental response output caching support.
	* director: Fixes 2 bugs (in http-backend and fastcgi backend) with regards to their connection ref-counting.
	* director: Added support for reconfiguring scheduling algorithm, including at runtime.
	* x0d: Added --dump-ast parameter to dump Flow's parsed AST.
	* x0d: plugin "vhost" has been removed in favor of the new match-keyword.
	* x0d: Adds --dump-ast and --dump-tc command line options to accompany --dump-ir (for debugging purposes).
	* x0d: Adds `request_header_buffer_size` config setup variable.
	* x0d: Adds `request_body_buffer_size` config setup variable.

0.7.0 (2013-10-18)

	* general: major source tree restructures, to make things more clear.
	* general: Port of XzeroBase and XzeroHttp to Mac OS/X, more to follow.
	* http: libXzeroHttp now no longer depends on libXzeroFlow, eliminating unneeded dependencies.
	* http: Added C-API for basic HTTP server embedding that you can use by linking against libx0capi.so.
	* http: Fixing regression regarding HTTP pipelining (#52).
	* http: Added support opportunistic writes.
	* http: Added SO_LINGER support via `lingering(timespan)` setup property.
	Must be enabled at compilation time via -DWITH_OPPORTUNISTIC_WRITE=ON.
	* base, flow: added support for multi-accept
	Must be enabled at compilation time via -DWITH_MULTI_ACCEPT=ON.
	* flow: ruby-1.9 alike named parameter association.
	* flow: Added new read-property `req.query`.
	* core: Introduce severities: crit, alert, emerg.
	* core: Support SO_REUSEPORT (as introduced in Linux Kernel 3.9.0, and
			supported by other UNIX OSes already)
	* x0d: Added bash completion.
	* x0d: Support -e epoll,select,poll,.... to choose event-system backend x0d should run on.
	* plugins: removed plugins proxy & fastcgi. Deprecated by director plugin.
	* plugins: accesslog plugin now also supports syslog target
	* plugins: auth plugin now supports PAM authentication (compile-time enabled by default)
	* plugins: director plugin has experimental support for backend acceleration
	* plugins: director plugin has initial support for HAproxy compatible CSV output
	* plugins: director plugin fixed wrt. off-by-one bug in scheduler.load stats.
	* plugins: director plugin now supports X-Sendfile for HTTP & FastCGI backends.
	* plugins: director plugin can now enable/disable complete clusters, resulting in 503 responses if disabled.

0.6.0 (2013-02-27)

	GOAL: running director plugin in productively in multi threaded mode.

	* http: multi threaded mode fixes
	* http: stability fixes
	* http: shutdown process resource cleanup fixes
	* http: improved diagnostic logging
	* http: C++ API improvements
	* http: fixed a bug wrt HTTP message processing in an edge case ignoring the message body
	* http: added support for preventing directory traversal outside document-root.
	* http: fixed document roots that contained trailing slashes
	* director: bug fixes
	* director: JSON API also shows number of dropped requests per load balancer
	* director: should now run properly in threaded mode.
	* director: added director.fcgi() and director.http() handlers to
	deprecate fastcgi and proxy plugins
	* core-api: added Severity level "notice" (syslog-alike).
	* core-api: Buffer now inherits from BufferRef.
	* core-api: Socket API improvements
	* status: added support for nginx-compatible status output, handler status.nginx_compat();
	* config: rewrite() now returns boolean to indicate whether or not rewritten path physically exists or not.
	* config: added systemd.booted() and systemd.controlled() to indicate systemd hypervisoring.
	* package: addeda initial Debian/Ubuntu packaging control files
	* x0d: --log-level= renamed to --log-severity= with from 0 (lowest) to 9 (highest)
	* x0d: --log-severity= also accepts symbolic values and introduced "notice" between "warning" and "info"
	* x0d: added --log-target=file|console|syslog|systemd
	* x0d: fixed PID file writing on process re-execution
	* flow: added log.notice() and log.warn() functions
	* flow: properly handle boolean values as boolean types (not just integer 0 and 1)
	* flow: added support for integer modulo operation
	* flow: added support for casting values of type int/bool/string to string.
	* flow: added support for logical expressions on the left side of an association expression ('=>')
	* flow: added regex.group(int position) to extract captures from regex matches
	* flow: added unless postscript statement.
	* flow: added file.exists(), file.is_reg(), file.is_dir(), file.is_exe()
	* flow: coding style cleanups and minor refactors
	* flow: added unary +/- operators
	* flow: added explicit casting to integers
	* general: dropped dependency to boost framework.
	* general: log-rotation support via SIGUSR1 implemented.

0.5.0 (2012-08-12)

	* director: new load balancer plugin
	* cgi: fixed bug in SCRIPT_NAME containing PATH_INFO
	* fastcgi: fixed bug in SCRIPT_NAME containing PATH_INFO
	* SocketSpec: API improvements
	* HttpCore: new flow function: `string req.cookie(key)` to retrieve cookie
	values within main handler
	* core: HttpRequest::pathinfo changed type from std::string to BufferRef
	* auth: new plugin for HTTP Basic Auth
	* core: new APIs: Pipe, PipeSource, PipeSink
	* updated files headers to new home site, http://xzero.io/
	* cmake: added more auto-tests, as for rrd and fcgi detections.
	* cmake: LLVM and mySQL cannot leak -DNDEBUG=1 anymore (LLVM did for Gentoo/Linux)
	* silencify some release-build compiler warnings
	* http: added "precompressed" handler, preferring .gz / .bz2 files over
	their equivalents and adding respective Content-Encoding header.
	The precompressed file version is only preferred if both files match their
	mtimes (semantically equivalent to nginx)
	* flow: ported from LLVM framework 2.9 to 3.0 (/3.1)
	* http: fixes #541 (warn on backlog > SOMAXCONN)
	* SqlStatement: code cleanup and logging readability improvements
	* HttpServer: log listener socket creations
	* Buffer: refactor setCapacity() to use realloc() only (no free()-calls)
	* fastcgi: added backend timeout management
	* fastcgi: code cleanups
	* proxy: fixes origin-Server cloaking
	* proxy: fixes crash
	* HttpConnection: log read/write errors (again)
	* HttpConnection: code cleanups
	* Socket: added remote() and local()
	* SocketSpec: prettify str() output
	* status: added some debugging-purpose request-specific data
	* HttpRequest: extend API to allow custom request inspection
	* Process: API improvements (regarding terminate/kill)
	* package: added pkg-cofig files for library components (base, flow, http)
	* HttpListener: dropped API in favor of ServerSocket
	* ServerSocket: file descriptor leak fixed
	* x0d: stability/consistency improvements
	* x0d: send MAINPID from the *old* to systemd on change. so that
	systemd's NotifyAccess=main works aswell
	* x0d: close listeners as quickly/early as possible in parent's graceful
	shutdown
	* man pages: documentation improvements
	* Socket: added setLoop(ev_loop*)
	* ServerSocket: added start() and stop() methods

0.4.0 (2011-05-26)

	* CompositeSource: added T* push_back<T>(args...), which also implicitely
	creates new T(args...), adds it to the list and returns it
	* CompositeSource: fixes a resource leak
	* HttpConnection: fixes HTTP pipelining
	* HttpConnection: temporarily disable opportunistic write calls
	* Logging: added the ability to configure logging via env var XZERO_LOGGING
	* Logging: renamed logging(bool) to setLogging(bool) for more consistency
	* SqlConnection: added affectedRows()
	* TextFormatter: new API
	* SqlStatement: allow constructs like: for (auto& row: sqlQuery(...)) { ... }
	* SqlStatement: added valueOf<size_t>(), which also maps to time_t
	* DateTime: use ev::tstamp instead of time_t
	* TimeSpan: make use of constexpr
	* Buffer: added swap(Buffer&);

0.3.0 (2011-04-16)

	* core: lots of refactoring and code cleanups
	* core: configuration API improved
	* core: introduced web_client API
	* core: added ability to early-abort connections in connect_open-hook
	* x0d: introduce --user, --group, --pid-file arguments
	* proxy: make use of new web_client API
	* tests: web_client unit test added

0.2.0 (2010-03-31)

	* overall improvements
	* proxy: new plugin
	* core: added basic SSL connections

0.1.0 (2010-03-20)

	* initial release featuring response content filter, compress plugin,
	sendfile, alias, userdir, vhost_basic, vhost_template, and more...

