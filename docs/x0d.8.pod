=head1 NAME

x0d - high performance HTTP web server

=head1 SYNOPSIS

x0d [B<-c>|B<--config> PATH] [B<-X>|B<--no-fork>] [B<-G>|B<--guard>] [B<--systemd>] \
    [B<-G>|B<--guard>] [B<-p>|B<--pid-file> PATH] \
    [B<-u>|B<--user> USER] [B<-g>|B<--group> GROUP] \
    [B<-L>|B<--log-severity> error|warning|notice|info|diag|debug] \
    [B<-l>|B<--log-target> syslog|file|systemd|console] \
    [B<-l>|B<--log-file> PATH] \
    [B<-i>|B<--instant> PATH[,PORT]] \
    [B<-k>|B<--crash-handler>] \
    [B<--dump-ast>] [B<--dump-ir>] [B<--dump-tc>] \
    [B<-v>|B<--version>] [B<-y>|B<--copyright>] [B<--splash>] \
    [B<-V>|B<--info>] [B<-h>|B<--help>]

=head1 DESCRIPTION

B<x0d> (pronounced: X-zero daemon) is a flexible, fast, and reasonable standards compliant
high performance HTTP/1.1 web server, written by Christian Parpart.

This man-page only documents B<x0d>-command line arguments

=head1 OPTIONS

=over 25

=item B<-c,--config=PATH>

Specifies a custom configuration file to load.

=item B<-h,--help>

Prints a short command line help.

=item B<-X,--no-fork>

Do not fork into background (/daemon-mode), detaching from the controlling
terminal.

=item B<-G,--guard>

Guard over the actual process by supervising its running state
and in case of emergency, restart it.

=item B<-p,--pid-file=PATH>

Specifies a path to a PID file to create, e.g. B</var/run/x0d/x0d.pid>.

=item B<-u,--user=NAME>

Specifies the user-name to drop privileges down to.
The process will also gain the user's standard-group If no group was
explicitely specified at command line.

=item B<-g,--group=NAME>

Specifies a group-name to drop group-privileges down to.
This overrides the standard-group associated with the specified user.

=item B<-l,--log-target=TARGET>

Sets the logging target to one of syslog, file, systemd, or console.
If log-target "file" is chosen, you must also specify B<--log-file=PATH>
in order to tell B<x0d> to what file to log.

The logging target B<systemd> actually uses the systemd logging facility,
which is special formatted output to stdout.

=item B<-l,--log-file=PATH>

Specifies the full path to where the x0d process should log to.
This log file is ignored when x0d is running in systemd-mode, and thus,
all log entries will be logged into a special format into stdout.

=item B<-L,--log-severity=VALUE>

Specifies the logging severity, one of: error, warning, notice, info, diag, or debug.
Defaults to "info".

=item B<-i,--instant=PATH[,PORT]>

Runs B<x0d> in instant-mode, meaning, no configuration file is loaded nor
needed at all. B<x0d> will just serve a single document root B<PATH>
and listen for incoming requests on the specified port.

B<x0d> will by default listen on port 8080 if no port was specified.

=item B<--systemd>

Explicitely runs in systemd-mode, a new init-system, which is usually
detected by B<x0d>. It is not recommended to use this option unless
you really know what you are doing.

=item B<-V,--info>

Prints B<x0d> copyright, version, default plugin loading directory,
and compile-time feature flags.

=item B<-v,--version>

Prints version information for this software.

=item B<-y,--copyright>

Prints copyright information for this software.

=item B<--dump-ast>

Prints the configuration file as Abstract Syntax Tree,
an intermediate representation form.

=item B<--dump-ir>

Prints the configuration file as backend Intermediate Representation (IR).

=item B<--dump-tc>

Prints the configuration file as generated Target Code as used by the Flow Virtual Machine.

=back

=head1 ERROR SEVERITIES

=over 15

=item B<error>

Unrecoverable exceptions that affect service healthiness, such as socket listening errors,
too man open file descriptors or disk write errors.

Errors that affect the boot sequence will cause the service to halt.
Errors that occur during runtime will be logged but will not cause a service shutdown.

=item B<warn>

Recoverable failure events. Such as a backend a failed resource load that provides a default value.

=item B<notice>

Events that cause change in service behaviour, such as backend nodes changing state (from/to online or offline).

=item B<info>

Purely informational messages, such as periodical statistical informations.

=item B<diag>

Diagnostic messages that help the application developer to understand the behaviour of B<x0d> or
related services.

This includes (but not limited to) logging of early client aborts, or other end-point I/O errors.

=item B<debug>

Only useful when developing/debugging B<x0d>. Not recommended for production use.

=back

=head1 SIGNALS

=over 15

=item B<SIGTERM>

Fast and clean process shutdown (without waiting for the current requests to complete).
If the process does still not shutdown within 10 seconds (due to some silly plugins),
the event loops will be broken up to exit forcefully.

=item B<SIGINT>

Same as B<SIGTERM>.

=item B<SIGQUIT>

Graceful process shutdown (waiting for the current requests to complete).

=item B<SIGHUP>

Reexecutes a new binary with a newly loaded configuration file as a child process.

Before the child process is being executed, the parent process will suspend processing
any current connections and does not accept any new connections.

If the child process sends B<SIGQUIT> to its parent, it will gracefully shutdown.

If the child process somehow fails to start up (that is, exits, or times out
in calling back with a B<SIGQUIT> on success), the parent process kills the child instead
and resumes normal operation as if there has been no B<SIBHUP> sent to this process.

This method does not just reload into a new configuration file but also
executs into a new binary for that, and is though, suitable for on the fly executable upgrades.

=item B<SIGUSR1>

Reopen all log files (for logfile rotation).

=item B<SIGTTIN>

Increases logging level (decreasing severity).

=item B<SIGTTOU>

Decreases logging level (increasing severity).

=back

=head1 ENVIRONMENT VARIABLES

=over 3

=item B<XZERO_DEBUG>

Defines a colon-separated list of C++ classes to print debugging information for.
This environment variable is only evaluated when compiled with debug information.

=item B<XZERO_LISTEN_FDS>

Defines a list of listener sockets being passed by the parent process to B<x0d> to
resume resume listening on them.

The passed file descriptrs will be closed if there is no corresponding 
configuration entry in the configuration file.

The format is (currently) a semicon-seperated list of socket specifications.
A socket speicfication is a comma-seperated list of tokens, e.g. "address,port,fd"
for TCP/IPv4 and TCP/IPv6 sockets or "path,fd" for UNIX domain sockets."

=back

=head1 HISTORY

The B<x0>-software development has been started in May 2009
by Christian Parpart with the goal to create a state-of-the-art
high performance HTTP web server and framework in modern C++.

=head1 LICENSE

B<x0d>, the underlying framework and its standard plugins is licensed under AGPL-3.

=head1 AUTHOR

B<x0d> (daemon, core framework, and plugins) is written by Christian Parpart <trapni@gentoo.org>

=head1 SEE ALSO

L<x0d.conf(5)>,
L<flow(7)>,
L<logrotate(8)>,
L<spawn-fcgi(1)>
