# vim:syntax=flow

handler test_ipaddr
{
	# tests IPv4 addresses.
	# The here used eq(IP, str) operator is implemented for unit-testing purposes.
	assert string(255.255.255.255) == '255.255.255.255', '255.255.255.255'
	assert string(192.168.0.1) == '192.168.0.1', '192.168.0.1'
	assert string(127.0.0.1) == '127.0.0.1', '127.0.0.1'
	assert string(0.0.0.0) == '0.0.0.0', '0.0.0.0'
}

handler test_ip6addr
{
	assert string(::ffff:192.168.1.2) == '::ffff:192.168.1.2', '::ffff:192.168.1.2'
	assert string(1234:3ffe::42) == '1234:3ffe::42', '1234:3ffe::42'
	assert string(1234::dead:beaf) == '1234::dead:beaf', '1234::dead:beaf'
	assert string(a234:3ffe::42) == 'a234:3ffe::42', 'a234:3ffe::42'
	assert string(a234::dead:beaf) == 'a234::dead:beaf', 'a234::dead:beaf'
	assert string(::) == '::', '::'
	assert string(::1) == '::1', '::1'
	assert string(::1234:1:2:34) == '::1234:1:2:34', '::1234:1:2:34'
	assert string(3ffe::1234:1:2:34) == '3ffe::1234:1:2:34', '3ffe::1234:1:2:34'
	assert string(1::) == '1::', '1::'
	assert string(2604::) == '2604::', '2604::'
	assert string(1208::dead:beaf) == '1208::dead:beaf', '1208::dead:beaf'
	assert string(fe80::21e:64ff:fe38:4534) == 'fe80::21e:64ff:fe38:4534', 'fe80::21e:64ff:fe38:4534'
}

handler test_cmp
{
	assert 1.2.3.4 == 1.2.3.4, 'eq'
	assert 1.2.3.4 != 1.2.3.5, 'uneq'
	assert 1:2::34 == 1:2::34, 'eq.6'
	assert 1:2::34 != 1:2::35, 'uneq.6'
}

handler test_ipnet
{
    assert 192.168.0.1 in 192.168.0.0/16
    assert 10.26.91.12 in 10.26.91.0/24
    assert 1.2.3.4 in 1.0.0.0/8

    #assert !(192.168.0.1 in 192.168.1.0/16)

    #assert string(192.168.0.1/24) == '192.168.0.1/24', '192.168.0.1/24'
    #assert string(::1/64) == '::1/64', '::1/64'
}
